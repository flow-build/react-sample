name: Build & Deploy
on:
  push:
    branches:
      - main
      - release
      - developer
env:
  REACT_APP_BASE_URL: ${{vars.REACT_APP_BASE_URL}}
  REACT_APP_MQTT_HOST: ${{vars.REACT_APP_MQTT_HOST}}
  REACT_APP_MQTT_PORT: ${{vars.REACT_APP_MQTT_PORT}}
  REACT_APP_DIAGRAMS_SERVER_URL: ${{ vars.REACT_APP_DIAGRAMS_SERVER_URL }}
  REACT_APP_METABASE_SITE_URL: ${{ vars.REACT_APP_METABASE_SITE_URL }}
  REACT_APP_METABASE_SECRET_KEY: ${{ secrets.REACT_APP_METABASE_SECRET_KEY }}
  REACT_APP_METABASE_DASHBOARD_NUMBER: ${{ vars.REACT_APP_METABASE_DASHBOARD_NUMBER }}
  REACT_APP_AWS_REGION: ${{ secrets.AWS_REGION }}
  REACT_APP_AWS_POOL_ID: ${{ vars.REACT_APP_AWS_POOL_ID }}
  REACT_APP_AWS_CLIENT_ID: ${{ secrets.REACT_APP_AWS_CLIENT_ID }}
  REACT_APP_CRYPTO_SECRET_KEY: ${{ secrets.CRYPTO_SECRET_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Some check on branch
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "env_name=production" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/developer" ]; then
            echo "env_name=development"  >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/release" ]; then
            echo "env_name=release"  >> $GITHUB_OUTPUT
          else
             echo "env_name=development"  >> $GITHUB_OUTPUT
          fi

      - name: Use variable setup in previous step
        run: echo "Using variable ${{ steps.branch_check.outputs.env_name }}"

    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}

  deployment:
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.build.outputs.env_name }}

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Check Environment Name
        run: echo "Using environment ${{ needs.build.outputs.env_name }}"
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Create .env file
        run: |
          echo REACT_APP_BASE_URL=$REACT_APP_BASE_URL >> .env
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DEBUG: false
          envkey_REACT_APP_BASE_URL: ${{ vars.REACT_APP_BASE_URL }}
          envkey_REACT_APP_MQTT_HOST: ${{ vars.REACT_APP_MQTT_HOST }}
          envkey_REACT_APP_MQTT_PORT: ${{ vars.REACT_APP_MQTT_PORT }}
          envkey_REACT_APP_DIAGRAMS_SERVER_URL: ${{ vars.REACT_APP_DIAGRAMS_SERVER_URL }}
          envkey_REACT_APP_METABASE_SITE_URL: ${{ vars.REACT_APP_METABASE_SITE_URL }}
          envkey_REACT_APP_METABASE_SECRET_KEY: ${{ secrets.REACT_APP_METABASE_SECRET_KEY }}
          envkey_REACT_APP_METABASE_DASHBOARD_NUMBER: ${{ vars.REACT_APP_METABASE_DASHBOARD_NUMBER }}
          envkey_REACT_APP_AWS_REGION: ${{ secrets.AWS_REGION }}
          envkey_REACT_APP_AWS_POOL_ID: ${{ vars.REACT_APP_AWS_POOL_ID }}
          envkey_REACT_APP_AWS_CLIENT_ID: ${{ secrets.REACT_APP_AWS_CLIENT_ID }}
          envkey_REACT_APP_CRYPTO_SECRET_KEY: ${{ secrets.CRYPTO_SECRET_KEY }}
          directory: "./"
          file_name: ".env"
      - name: Make envfile prod
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_DEBUG: false
          envkey_REACT_APP_BASE_URL: ${{ vars.REACT_APP_BASE_URL }}
          envkey_REACT_APP_MQTT_HOST: ${{ vars.REACT_APP_MQTT_HOST }}
          envkey_REACT_APP_MQTT_PORT: ${{ vars.REACT_APP_MQTT_PORT }}
          envkey_REACT_APP_DIAGRAMS_SERVER_URL: ${{ vars.REACT_APP_DIAGRAMS_SERVER_URL }}
          envkey_REACT_APP_METABASE_SITE_URL: ${{ vars.REACT_APP_METABASE_SITE_URL }}
          envkey_REACT_APP_METABASE_SECRET_KEY: ${{ secrets.REACT_APP_METABASE_SECRET_KEY }}
          envkey_REACT_APP_METABASE_DASHBOARD_NUMBER: ${{ vars.REACT_APP_METABASE_DASHBOARD_NUMBER }}
          envkey_REACT_APP_AWS_REGION: ${{ secrets.AWS_REGION }}
          envkey_REACT_APP_AWS_POOL_ID: ${{ vars.REACT_APP_AWS_POOL_ID }}
          envkey_REACT_APP_AWS_CLIENT_ID: ${{ secrets.REACT_APP_AWS_CLIENT_ID }}
          envkey_REACT_APP_CRYPTO_SECRET_KEY: ${{ secrets.CRYPTO_SECRET_KEY }}
          directory: "./"
          file_name: ".env.production"
      - name: Yarn Install
        run: yarn --prefer-offline
      - name: Staging Build
        run: yarn build
        env:
          CI: false
      - name: Deploy to S3
        uses: jakejarvis/s3-sync-action@master
        env:
          AWS_S3_BUCKET: ${{ vars.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: "build"
